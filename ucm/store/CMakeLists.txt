cmake_minimum_required(VERSION 3.18)
project(UCMStore VERSION 25.2.0 LANGUAGES CXX)
set(UCMSTORE_ROOT ${CMAKE_CURRENT_SOURCE_DIR})
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

option(BUILD_TESTS "build all test suits." OFF)
option(COVERAGE_ENABLED "coverage enabled." OFF)
option(DOWNLOAD_DEPENDENCE "download dependence by cmake." ON)
set(RUNTIME_ENVIRONMENT "simu" CACHE STRING "runtime: simu, ascend or cuda.")
set(LOGGER_BACKEND "spdlog" CACHE STRING "backend: spdlog or flux.")

execute_process(COMMAND git rev-parse HEAD OUTPUT_VARIABLE UC_VAR_GIT_COMMIT_ID OUTPUT_STRIP_TRAILING_WHITESPACE)
add_compile_definitions(UC_VAR_PROJECT_NAME="${PROJECT_NAME}")
add_compile_definitions(UC_VAR_PROJECT_VERSION="${PROJECT_VERSION}")
add_compile_definitions(UC_VAR_GIT_COMMIT_ID="${UC_VAR_GIT_COMMIT_ID}")
add_compile_definitions(UC_VAR_BUILD_TYPE="${CMAKE_BUILD_TYPE}")

set(CMAKE_SKIP_RPATH TRUE)
set(FLAGS_PUBLIC "-Wall -Werror -fPIC -Wl,-z,relro,-z,now")
set(FLAGS_DEBUG "-O0 -g")
set(FLAGS_RELEASE "-O3 -D_FORTIFY_SOURCE=2")
set(FLAGS_COVERAGE "-fprofile-arcs -ftest-coverage")
string(TOLOWER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE_LOWER)
if(CMAKE_BUILD_TYPE_LOWER STREQUAL "debug")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${FLAGS_PUBLIC} ${FLAGS_DEBUG}")
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${FLAGS_PUBLIC} ${FLAGS_RELEASE}")
endif()
if(COVERAGE_ENABLED)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${FLAGS_COVERAGE}")
endif()
if(BUILD_TESTS)
    enable_testing()
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${UCMSTORE_ROOT}/output/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${UCMSTORE_ROOT}/output/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${UCMSTORE_ROOT}/output/lib)

include_directories(${UCMSTORE_ROOT}/connector)
add_subdirectory(vendor)
add_subdirectory(infra)
add_subdirectory(device)
add_subdirectory(nfsstore)
add_subdirectory(dramstore)
add_subdirectory(localstore)
add_subdirectory(test)
